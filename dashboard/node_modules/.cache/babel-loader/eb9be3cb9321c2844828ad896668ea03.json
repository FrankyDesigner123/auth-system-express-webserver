{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/frankytse/ReactNative/Fullstack-React-Native-Expressjs/auth-system/server/dashboard/src/components/auth/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect, Redirect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\n\nconst Register = ({\n  setAlert,\n  register\n}) => {\n  _s();\n\n  // useState hook to change input onChange\n  const [formData, setFormData] = useState({\n    fullName: '',\n    email: '',\n    password: '',\n    role: 'user'\n  });\n  const {\n    fullName,\n    email,\n    password,\n    role\n  } = formData; // onChange function to take input value from useState hook\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  }); // onSubmit function to send data\n\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (register({\n      fullName,\n      email,\n      password,\n      role\n    })) {\n      setAlert('User has been succesfully registered.', 'success');\n    } else {\n      setAlert('User has been succesfully registered.', 'danger');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"large text-primary\",\n      children: \"Register Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lead\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this), '  ', \"Create Your Account.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: e => onSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Full Name\",\n          name: \"fullName\",\n          value: fullName,\n          onChange: e => onChange(e),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email Address\",\n          name: \"email\",\n          value: email,\n          onChange: e => onChange(e),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          name: \"password\",\n          value: password,\n          onChange: e => onChange(e),\n          minLength: \"6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        value: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"my-1\",\n      children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Register, \"07z3aaa1fdRIeD3OHmv5l03Qq9Q=\");\n\n_c = Register;\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {\n  setAlert,\n  register\n})(Register);\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/frankytse/ReactNative/Fullstack-React-Native-Expressjs/auth-system/server/dashboard/src/components/auth/Register.js"],"names":["React","Fragment","useState","Link","connect","Redirect","PropTypes","setAlert","register","Register","formData","setFormData","fullName","email","password","role","onChange","e","target","name","value","onSubmit","preventDefault","propTypes","func","isRequired","mapStateToProps","state","isAuthenticated","auth"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AAEA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,aAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,QAAT,QAAyB,oBAAzB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEF,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA4B;AAAA;;AAC5C;AACA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC;AACxCU,IAAAA,QAAQ,EAAE,EAD8B;AAExCC,IAAAA,KAAK,EAAE,EAFiC;AAGxCC,IAAAA,QAAQ,EAAE,EAH8B;AAIxCC,IAAAA,IAAI,EAAE;AAJkC,GAAD,CAAxC;AAOA,QAAM;AAAEH,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA,QAAnB;AAA6BC,IAAAA;AAA7B,MAAsCL,QAA5C,CAT4C,CAW5C;;AACA,QAAMM,QAAQ,GAAIC,CAAD,IAChBN,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAe,KAACO,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAAzC,GAAD,CADZ,CAZ4C,CAe5C;;;AACA,QAAMC,QAAQ,GAAG,MAAOJ,CAAP,IAAa;AAC7BA,IAAAA,CAAC,CAACK,cAAF;;AACA,QAAId,QAAQ,CAAC;AAAEI,MAAAA,QAAF;AAAYC,MAAAA,KAAZ;AAAmBC,MAAAA,QAAnB;AAA6BC,MAAAA;AAA7B,KAAD,CAAZ,EAAmD;AAClDR,MAAAA,QAAQ,CAAC,uCAAD,EAA0C,SAA1C,CAAR;AACA,KAFD,MAEO;AACNA,MAAAA,QAAQ,CAAC,uCAAD,EAA0C,QAA1C,CAAR;AACA;AACD,GAPD;;AASA,sBACC,QAAC,QAAD;AAAA,4BACC;AAAI,MAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA,8BACC;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cADD,EAEE,IAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,eAMC;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAuB,MAAA,QAAQ,EAAGU,CAAD,IAAOI,QAAQ,CAACJ,CAAD,CAAhD;AAAA,8BACC;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACC;AACC,UAAA,IAAI,EAAC,MADN;AAEC,UAAA,WAAW,EAAC,WAFb;AAGC,UAAA,IAAI,EAAC,UAHN;AAIC,UAAA,KAAK,EAAEL,QAJR;AAKC,UAAA,QAAQ,EAAGK,CAAD,IAAOD,QAAQ,CAACC,CAAD,CAL1B;AAMC,UAAA,QAAQ;AANT;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADD,eAWC;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACC;AACC,UAAA,IAAI,EAAC,OADN;AAEC,UAAA,WAAW,EAAC,eAFb;AAGC,UAAA,IAAI,EAAC,OAHN;AAIC,UAAA,KAAK,EAAEJ,KAJR;AAKC,UAAA,QAAQ,EAAGI,CAAD,IAAOD,QAAQ,CAACC,CAAD,CAL1B;AAMC,UAAA,QAAQ;AANT;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAXD,eAqBC;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACC;AACC,UAAA,IAAI,EAAC,UADN;AAEC,UAAA,WAAW,EAAC,UAFb;AAGC,UAAA,IAAI,EAAC,UAHN;AAIC,UAAA,KAAK,EAAEH,QAJR;AAKC,UAAA,QAAQ,EAAGG,CAAD,IAAOD,QAAQ,CAACC,CAAD,CAL1B;AAMC,UAAA,SAAS,EAAC;AANX;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cArBD,eA+BC;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,SAAS,EAAC,iBAA/B;AAAiD,QAAA,KAAK,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA,cA/BD;AAAA;AAAA;AAAA;AAAA;AAAA,YAND,eAuCC;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA,2DAC0B,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAD1B;AAAA;AAAA;AAAA;AAAA;AAAA,YAvCD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AA6CA,CAtED;;GAAMR,Q;;KAAAA,Q;AAwENA,QAAQ,CAACc,SAAT,GAAqB;AACpBhB,EAAAA,QAAQ,EAAED,SAAS,CAACkB,IAAV,CAAeC,UADL;AAEpBjB,EAAAA,QAAQ,EAAEF,SAAS,CAACkB,IAAV,CAAeC;AAFL,CAArB;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AACnCC,EAAAA,eAAe,EAAED,KAAK,CAACE,IAAN,CAAWD;AADO,CAAZ,CAAxB;;AAIA,eAAexB,OAAO,CAACsB,eAAD,EAAkB;AAAEnB,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAlB,CAAP,CAAiDC,QAAjD,CAAf","sourcesContent":["import React, { Fragment, useState } from 'react';\n\nimport { Link } from 'react-router-dom';\nimport { connect, Redirect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\n\nconst Register = ({ setAlert, register }) => {\n\t// useState hook to change input onChange\n\tconst [formData, setFormData] = useState({\n\t\tfullName: '',\n\t\temail: '',\n\t\tpassword: '',\n\t\trole: 'user',\n\t});\n\n\tconst { fullName, email, password, role } = formData;\n\n\t// onChange function to take input value from useState hook\n\tconst onChange = (e) =>\n\t\tsetFormData({ ...formData, [e.target.name]: e.target.value });\n\n\t// onSubmit function to send data\n\tconst onSubmit = async (e) => {\n\t\te.preventDefault();\n\t\tif (register({ fullName, email, password, role })) {\n\t\t\tsetAlert('User has been succesfully registered.', 'success');\n\t\t} else {\n\t\t\tsetAlert('User has been succesfully registered.', 'danger');\n\t\t}\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<h1 className=\"large text-primary\">Register Account</h1>\n\t\t\t<p className=\"lead\">\n\t\t\t\t<i className=\"fas fa-user\"></i>\n\t\t\t\t{'  '}Create Your Account.\n\t\t\t</p>\n\t\t\t<form className=\"form\" onSubmit={(e) => onSubmit(e)}>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Full Name\"\n\t\t\t\t\t\tname=\"fullName\"\n\t\t\t\t\t\tvalue={fullName}\n\t\t\t\t\t\tonChange={(e) => onChange(e)}\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tplaceholder=\"Email Address\"\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\tonChange={(e) => onChange(e)}\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\tonChange={(e) => onChange(e)}\n\t\t\t\t\t\tminLength=\"6\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\n\t\t\t</form>\n\t\t\t<p className=\"my-1\">\n\t\t\t\tAlready have an account? <Link to=\"/login\">Login</Link>\n\t\t\t</p>\n\t\t</Fragment>\n\t);\n};\n\nRegister.propTypes = {\n\tsetAlert: PropTypes.func.isRequired,\n\tregister: PropTypes.func.isRequired,\n};\nconst mapStateToProps = (state) => ({\n\tisAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { setAlert, register })(Register);\n"]},"metadata":{},"sourceType":"module"}